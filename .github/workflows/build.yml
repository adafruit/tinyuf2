name: Build

on:
  pull_request:
  push:
  repository_dispatch:
  release:
    types:
      - created

jobs:

  # ---------------------------------------
  # Build ESP32SX family
  # ---------------------------------------
  ESP32-S2:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        board:
        # Alphabetical order
        - 'adafruit_feather_esp32s2'
        - 'adafruit_feather_esp32s2_tft'
        - 'adafruit_funhouse_esp32s2'
        - 'adafruit_magtag_29gray'
        - 'adafruit_metro_esp32s2'
        - 'artisense_rd00'
        - 'atmegazero_esp32s2'
        - 'circuitart_esp32s2core'
        - 'espressif_kaluga_1'
        - 'espressif_saola_1_wroom'
        - 'espressif_saola_1_wrover'
        - 'gravitech_cucumberRIS_v1.1'
        - 'lilygo_ttgo_t8_s2_st7789'
        - 'microdev_micro_s2'
        - 'muselab_nanoesp32-s2_wroom'
        - 'muselab_nanoesp32-s2_wrover'
        - 'olimex_esp32s2_devkit_lipo_vB1'
        - 'targett_mcb_wroom'
        - 'targett_mcb_wrover'
        - 'unexpectedmaker_feathers2'
        - 'unexpectedmaker_tinys2'
    steps:
    - name: Setup Python
      uses: actions/setup-python@v2

    - name: Pull ESP-IDF docker
      run: docker pull espressif/idf:release-v4.3

    - name: Checkout
      uses: actions/checkout@v2

    - name: Checkout submodules
      run: git submodule update --init lib/tinyusb lib/uf2

    - name: Build
      run: docker run --rm -v $PWD:/project -w /project espressif/idf:release-v4.3 make -C ports/esp32s2/ BOARD=${{ matrix.board }} all self-update copy-artifact

    - uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.board }}
        path: ports/esp32s2/_bin/${{ matrix.board }}/

    - name: Create Release Asset
      if: ${{ github.event_name == 'release' }}
      run: |
        #for f in ports/esp32s2/_bin/${{ matrix.board }}/*; do mv $f ${f%.*}-${{ github.event.release.tag_name }}."${f#*.}"; done
        zip -jr tinyuf2-${{ matrix.board }}-${{ github.event.release.tag_name }}.zip ports/esp32s2/_bin/${{ matrix.board }}

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: ${{ github.event_name == 'release' }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: tinyuf2-${{ matrix.board }}-${{ github.event.release.tag_name }}.zip
        asset_name: tinyuf2-${{ matrix.board }}-${{ github.event.release.tag_name }}.zip
        asset_content_type: application/zip

    - name: Upload Release Asset for Self-Update
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: ${{ github.event_name == 'release' }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ports/esp32s2/_bin/${{ matrix.board }}/update-tinyuf2.uf2
        asset_name: update-tinyuf2-${{ matrix.board }}-${{ github.event.release.tag_name }}.uf2
        asset_content_type: application/x-binary

  # ---------------------------------------
  # Build ARM family
  # ---------------------------------------
  ARM:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        board:
        # Alphabetical order
        # lpc55
        - 'double_m33_express'
        - 'lpcxpresso55s28'
        - 'lpcxpresso55s69'
        # mimxrt10xx
        - 'imxrt1010_evk'
        - 'imxrt1020_evk'
        - 'imxrt1060_evk'
        - 'metro_m7_1011'
        #stm32f3
        - 'stm32f303disco'
        # stm32f4
        - 'circuitart_stm32f4core'
        - 'feather_stm32f405_express'
        - 'stm32f411ve_discovery'
        - 'stm32f411ce_blackpill'
        - 'stm32f401_blackpill'

    steps:
    - name: Setup Python
      uses: actions/setup-python@v2

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Checkout common submodules in lib
      run: git submodule update --init lib/sct_neopixel lib/tinyusb lib/uf2

    - name: Set Toolchain URL
      run: echo >> $GITHUB_ENV TOOLCHAIN_URL=https://github.com/xpack-dev-tools/arm-none-eabi-gcc-xpack/releases/download/v10.2.1-1.1/xpack-arm-none-eabi-gcc-10.2.1-1.1-linux-x64.tar.gz

    - name: Cache Toolchain
      uses: actions/cache@v2
      id: cache-toolchain
      with:
        path: ~/cache/
        key: ${{ runner.os }}-21-03-19-${{ env.TOOLCHAIN_URL }}

    - name: Install Toolchain
      if: steps.cache-toolchain.outputs.cache-hit != 'true'
      run: |
        mkdir -p ~/cache/toolchain
        wget --progress=dot:mega $TOOLCHAIN_URL -O toolchain.tar.gz
        tar -C ~/cache/toolchain -xaf toolchain.tar.gz

    - name: Set Toolchain Path
      run: echo >> $GITHUB_PATH `echo ~/cache/toolchain/*/bin`

    - name: Find Port
      run: |
        ENV_PORT=`echo ports/*/boards/${{ matrix.board }}`
        ENV_PORT=`dirname $ENV_PORT`
        ENV_PORT=`dirname $ENV_PORT`
        echo ENV_PORT=$ENV_PORT >> $GITHUB_ENV

    - name: Build
      run: |
        make -C $ENV_PORT BOARD=${{ matrix.board }} all copy-artifact
        for app in ${{ env.ENV_PORT }}/apps/*/; do make -C $app BOARD=${{ matrix.board }} all; done

    - uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.board }}
        path: ${{ env.ENV_PORT }}/_bin/${{ matrix.board }}

    - name: Create Release Asset
      if: ${{ github.event_name == 'release' }}
      run: |
        for f in ${{ env.ENV_PORT }}/_bin/${{ matrix.board }}/*; do mv $f ${f%.*}-${{ github.event.release.tag_name }}."${f#*.}"; done
        zip -jr tinyuf2-${{ matrix.board }}-${{ github.event.release.tag_name }}.zip ${{ env.ENV_PORT }}/_bin/${{ matrix.board }}

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: ${{ github.event_name == 'release' }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: tinyuf2-${{ matrix.board }}-${{ github.event.release.tag_name }}.zip
        asset_name: tinyuf2-${{ matrix.board }}-${{ github.event.release.tag_name }}.zip
        asset_content_type: application/zip

    - name: Upload Release Asset for Self-Update
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: ${{ github.event_name == 'release' }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ env.ENV_PORT }}/_bin/${{ matrix.board }}/update-tinyuf2-${{ matrix.board }}-${{ github.event.release.tag_name }}.uf2
        asset_name: update-tinyuf2-${{ matrix.board }}-${{ github.event.release.tag_name }}.uf2
        asset_content_type: application/x-binary

  # ---------------------------------------
  # Unit testing with ghostfat
  # ---------------------------------------
  GHOSTFAT:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        board:
          # Alphabetical order
          # test_ghostfat
          - 'test_4k_cluster'
          - 'test_32k_cluster'
          - 'test_base'
          - 'test_huge'

    steps:
    - name: Setup Python
      uses: actions/setup-python@v2

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build
      run: |
        make --directory ports/test_ghostfat/ BOARD=${{ matrix.board }} all

    - name: Copy known good filesystem image
      # NOTE: test_huge's knowngood.img file starts as 1.5 GiB
      #       Compressing once with GZip results gives 85 MiB
      #       Compressing it a second time gives 10 MiB ...
      #       Therefore, store known good images double-compressed...
      run: |
        pushd ./ports/test_ghostfat/
        cp ./boards/${{ matrix.board }}/knowngood.img.gz.gz  ./_build/${{ matrix.board }}/
        popd

    - name: Decompress known good filesystem image
      run: |
        pushd ./ports/test_ghostfat/
        gzip --decompress  ./_build/${{ matrix.board }}/knowngood.img.gz.gz
        gzip --decompress  ./_build/${{ matrix.board }}/knowngood.img.gz
        popd

    - name: Execute native self-test
      run: |
        pushd ./ports/test_ghostfat/_build/${{ matrix.board }}/
        chmod +x ./tinyuf2-${{ matrix.board }}.elf
        ./tinyuf2-${{ matrix.board }}.elf
        popd
